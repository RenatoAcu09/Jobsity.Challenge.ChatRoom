version: "3.5"

services:
  nginx:
    image: RenatoAcu09/jobsitychallengechatroom_nginx
    depends_on:
      - signalr
      - bot-api
      - client
    restart: always
    ports:
      - "8080:80"

  db:
    image: mcr.microsoft.com/mssql/server:2019-CU15-ubuntu-20.04
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: DockerSql2019!
    volumes:
      - ./dbdata:/var/opt/mssql/data
    ports:
      - "5433:1433"
    restart: always

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1
    volumes:
        - rabbit:/var/lib/rabbitmq/
        - rabbit:/var/log/rabbitmq

  client:
    image: RenatoAcu09/jobsitychallengechatroom_client
    depends_on:
      - signalr
      - bot-api
    environment:
      - ConnectionStrings__DefaultConnection=Data Source=db,1433;Initial Catalog=Identitychatroom;User Id=SA;Password=DockerSql2019!;
      - SignalRUrl=http://localhost:8080/
    restart: always

  signalr:
    image: RenatoAcu09/jobsitychallengechatroom_signalr
    depends_on:
      - bot-api
    environment:
      - ConnectionStrings__DefaultConnection=Data Source=db,1433;Initial Catalog=chatroom;User Id=SA;Password=DockerSql2019!;
      - Apis__UrlBot=http://bot-api/bot-api/v1/
    restart: always

  bot-api:
    image: RenatoAcu09/jobsitychallengechatroom_bot-api
    depends_on:
      - rabbitmq
    environment:
      - AllowedCommands__0__MessageBroker__ConnectionString=amqp://guest:guest@rabbitmq:5672/
    restart: always

  consumer:
    image: RenatoAcu09/jobsitychallengechatroom_consumer
    depends_on:
      - rabbitmq
      - client
    environment:
      - ChatApiUrl=http://signalr/chat
      - MessageBroker__ConnectionString=amqp://guest:guest@rabbitmq:5672/
    restart: on-failure

volumes:
  dbdata:
  rabbit:
